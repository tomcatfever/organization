#+TITLE: Stephen Grider's Vue Essentials Notes
#+AUTHOR: Tom Adams @tomcatfever
#+CATEGORY: Courses 
#+STARTUP: overview
#+STARTUP: indent 
#+SEQ_TODO: TODO CURRENT SOMEDAY | DONE CANCEL
* Vue Essentials Course
137 lectures 10 hrs 22 mins (622 minutes)
** Sections
*** CURRENT Part One: An Introduction to Vue
A Vue starter project, terminology introduction, Imperative vs Declarative programming, and a Exercise with solutions.
/93 minutes 24 lectures/
**** Started <2018-05-22 Tue 19:46>  
*** Part Two: Moving on with Vue CLI
Introduction to Vue CLI
/32 minutes 8 lectures/
*** Part Three: Writing Effective Vue Apps
More detailed Vue with a Youtube-like app with a focus on component driven development
/180 minutes 47 lectures/
*** Part Four: Handling State with Vuex
What is stays in the title plus using semantic ui
/32 minutes 8 lectures/
*** Part Five: Authentication in Vue with OAuth2
Handling authentication states
/80 minutes 17 lectures/
*** Part Six: Navigation with Vue Router
Connecting Vue router to the app.
/78 minutes 16 lectures/
*** Part Seven: Design of Vuex Modules
Working with Vue models
/47 minutes 10 lectures/
*** Part Eight: Handling Image Upload
Image uploading and CSS Grid
/50 minutes 12 lectures/
** Things to do
*** DONE Summarize each section
CLOSED: [2018-05-22 Tue 19:46]
*** DONE Calculate section length in minutes
CLOSED: [2018-05-22 Tue 19:46]
* Part One: An Introduction to Vue
** CodePen Example
[[https://codepen.io/sgrider/pen/mLwzjK][This is a link to Stephen's codepen example.]]
** Vue Templates & Instances 
:LOGBOOK:
CLOCK: [2018-05-23 Wed 09:18]--[2018-05-23 Wed 09:40] =>  0:22
CLOCK: [2018-05-23 Wed 08:15]--[2018-05-23 Wed 09:05] =>  0:50
:END:
In Vue, Templates and Instances are one way of structuring an app.
+ *Vue Templates* are /created in HTML/ and /describes the structure and content of the app/.  
  + /It is possible to make Vue TemplatTes in JavaScript as well./
+ *Vue Instances* are /created in JavaScript/ and /describes what happens when a user interacts with the app/.

A Vue Instance can access a Template using built-in document object model query selector methods.

#+BEGIN_SRC js
// Selects the element with a id of app
new Vue({
  el: '#app'
});
#+END_SRC

:VueDomQuerySelector:
This slide provide a visualization.
[[./img/VueDomQuerySelector.png][Image:VueDomQuerySelector]]
:END:

To better illustrate these principals, we will build an app.

:IdenticonAppWireframe:
This image shows the app behaviors that need implemented.
[[./img/IdenticonAppWireframe.png]]
:END:
** Templates & Instances Code Example
*** DONE Identicon Step 1: Detect entered text
CLOSED: [2018-05-23 Wed 12:28]
:LOGBOOK:
CLOCK: [2018-05-23 Wed 12:15]--[2018-05-23 Wed 12:28] =>  0:13
CLOCK: [2018-05-23 Wed 10:43]--[2018-05-23 Wed 11:40] =>  0:57
:END:

_Step One Will_
+ Add a 'method' to view instance
  + A 'method' is a function tied to Vue instance that responds to user events
+ Call it any time user enters text

:CodeExampleConsoleLog:
#+BEGIN_SRC js
// Identicon Vue Instance
new Vue({
  el: '#app',
  methods: {
    onInput: function() {
      console.log('Someone typed something.'); // Must directly connect method to Template.
    }
  }
});
#+END_SRC
#+BEGIN_SRC html
<!-- Identicon Vue Template -->
<div id='app'>
    <h3>My Identicon Generator</h3>
    <div>
        Input:
        <input v-on:input="onInput"/> <!-- Define 'directive' to onInput method. -->
    </div>
    <div>Output:</div>
</div>
#+END_SRC
:END:

_What is a directive?_
A directive is Template syntax that initiates a piece of code.  When Vue looks at HTML, it searches for keywords which define a 'directive'. In the example above, ~v-on~ is a directive for an event handler, ~input~ event, and ~onInput~ is the called method.

_Identicon Step 1: Summary_
In this section, a view ~directive~ is used to connect a ~method~ on an ~input event~.
*** CURRENT Identicon Step 2: Get entered text
:LOGBOOK:
CLOCK: [2018-05-23 Wed 12:30]--[2018-05-23 Wed 12:37] =>  0:07
:END:

_Step Two Will_
+
*** TODO Identicon Step 3: Text generates Identicon
*** TODO Identicon Step 4: Show Identicon in 'output'
* Up Next
https://www.udemy.com/vue-js-course/learn/v4/t/lecture/10229718?start=0
