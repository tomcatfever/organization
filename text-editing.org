#+TITLE: Word Processing Versus Text Editing In 2018
#+STARTUP: indent 
#+STARTUP: content
** Tasks
   :LOGBOOK:
   CLOCK: [2018-05-08 Tue 17:31]--[2018-05-08 Tue 17:46] =>  0:15
   CLOCK: [2018-05-08 Tue 14:56]--[2018-05-08 Tue 15:53] =>  0:57
   CLOCK: [2018-05-08 Tue 13:46]--[2018-05-08 Tue 14:28] =>  0:42
   :END:
*** DONE Outline
*** DONE Draft
*** TODO Proof Read  
*** TODO Record video
*** TODO Add Images
*** TODO Brainstorm 30 more titles
*** TODO Publish


* Word Processing v Text Editing 
** Fiddling With Text Tools - A Personal Obsession
   Writing is the most important use for a computer.  It has transformed a highly specialized set of tasks and skills into a way for anyone to communicate anywhere anytime.

   Yet, I have never read a useful article about word procesing.

   This seems odd to because we all spend a huge amount of time writing and editing.

   Maybe, it is for a class.  Or a club event.  Perhaps, a small project. Or an ambitious one.

   Any and all of these require a writing and publishing tool.

   You might have a requirement from a class that requires submitting text in a docx (Microsoft Word) format.  Or you may need to use specific styles in HTML or MarkDown to publish on Medium or on a company's blog.

   You can use Microsoft Word to write everything.  Then go through the tedious task of transforming the document from several Microsoft Word files into one.

   In fact, that is most likely what you do.  Most likely, you have Word for OSX or Windows.

   But, word processing tools like MS Word are extremely limited in their usefulness and extendability.

   And, trust me.  I have read lots of opinionated pieces about one tool or another.  Finding a writing tool I liked has been a minor obcession of mine.

   Some reccomend Google Docs.  Docs is great, free, and extendable with addons.  However, it is totally cloud based and has all the limited behaviors of a rich text word processor.

   A pro programming blogger is in love with ViM.  Vi iMproved is available in any terminal.  It is great for quickly editing a plain text  or small script file.

   For a larger project, like writing a book Tim Ferris /loves/ Scrivener.  George RR Martin swears by WordStar on an old DOS machine.  But, I have tutorial about managing large projects using Docs or Word.  And even traditionally programming tools like VS Code or Atom.

   Each gives their reasons.

   So what to do?

** Some reccomendations
   I have tried everything.  I'm talking about hours of my free time spent looking at **AMAZING NEW TOOLS** and **MASTERING THE CLASSICS** and **HACKING YOUR WORKFLOW**.

   I have beta access to **HOT NEW PRODUCT** (Coda.io for Google Docs).  And I have **CUSTOMIZED A VIMRC** (which I deleted).

   I still don't know a perfect solution  But, I can make some reccomendations based.
   
*** Best for small writing projects and collaboration
    *Google Docs + Addons*
    Pros: Free, Extendable, Easy to share in many formats 
    Cons: Strange formatting rules, Difficult to edit plain text
    
*** Best for advanced needs
    *Emacs*
    Pros: Does everything, Large community, Orgmode
    Cons: Hard to get started (have to read the instructions)

** Getting Started With Spacemacs
    You may be thinking... GNU Emacs?  Isn't that for math students and really pretentious programmers?

    Yes.

    But, it will change the way you write by giving you all the features.

    I've been programming as a hobby for 5 years.  I used ViM and the ViM extension for VS Code since the beginning of 2018.

    Not taking your hand off of the keyboard to navigate around a text is amazing.

    It won't make you a better programmer or writer.

    It will make it much easier to write in programming languages like JavasScript, Java, and Go where code blocks are enclosed in {{ mustashe brackets }}.

    To get started with Emacs, try Spacemacs.  It is a curated editon that emulates ViM.

    First go to your computer's home directory and backup your .emacs.d/ folder if you have one.

    Then remove it and enter.

    ~git clone https://github.com/syl20bnr/spacemacs.git .emacs.d/~

    Then go to your desktop and make a new file called ~test.org~.

    Double click on that file.  It will launch an Emacs shell.

    Now hit

   ~SPC f e d~ 

   This will open the dot file.

   Now, click on the line ~; org~.  Put the cursor over the semicolon and hit the ~x~ key on you keyboard and hit escape.  Then key in ~:w~.

   Reload the browser by keying in 

   ~SPC f e R~

   Finally, hit the escape key to enter normal mode (the small tab on the left should now be orange) and key in ~:q~

   You should return to the file you had open and the small orange box should now read OrgMode.

   Congradulations.  You now have SpaceMacs.
   
   The best way to learn more is to go to [[https://github.com/syl20bnr/spacemacs/blob/master/doc/DOCUMENTATION.org][Spacemacs GitHub Documentation]].  Then add ~#getting-help~ to the end of the URL.

   Try navigating around the help file.

   It will ask you to do the EvilTutor (basically the ViM tutorial).  I suggest you do that if you don't have experience with ViM.

   Once you get it working, you will find things like syntax highlighting and text folding very powerful in ANY writing project.


#  LocalWords:  recommendations
